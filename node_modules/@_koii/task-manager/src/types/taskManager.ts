import type { Submitter, DistributionList } from "./global";

export interface ExtensionConfig {
  percent: number;
  publicKey: string;
}

export interface ExtensionConfigs {
  [key: string]: ExtensionConfig;
}

type SetupFunction = () => Promise<void>;
type TaskFunction = (roundNumber: number) => Promise<any>;
type SubmissionFunction = (roundNumber: number) => Promise<string | void>;
type AuditFunction = (
  submission: string,
  roundNumber: number,
  submitter_pubkey: string,
) => Promise<boolean | void>;
type DistributionFunction = (
  submitters: Submitter[],
  bounty: number,
  roundNumber: number,
) => DistributionList;
type RoutesFunction = () => Promise<void>;

export interface UserFunctions {
  setup: SetupFunction;
  task: TaskFunction;
  submission: SubmissionFunction;
  audit: AuditFunction;
  distribution: DistributionFunction;
  routes: RoutesFunction;
}
