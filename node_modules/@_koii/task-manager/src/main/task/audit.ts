import { namespaceWrapper } from "@_koii/namespace-wrapper";
import { getTaskManager } from "../taskManager.js";
class Audit {
  /**
   * Validates the submission value by your logic
   *
   * @param {string} submission_value - The submission value to be validated
   * @param {number} round - The current round number
   * @returns {Promise<boolean>} The validation result, return true if the submission is correct, false otherwise
   */
  async validateNode(
    submission_value: string,
    round: number,
    submitter_pubkey: string,
  ): Promise<boolean> {
    console.log(`VALIDATE NODE FOR ROUND ${round} for ${submitter_pubkey}`);
    const taskManager = await getTaskManager();
    const vote = await taskManager.auditSubmission(
      submission_value,
      round,
      submitter_pubkey,
    );
    return vote ?? true;
  }
  /**
   * Vote on the other nodes Submissions
   *
   * @param {number} roundNumber - The current round number
   * @returns {void}
   */
  async auditTask(roundNumber: number): Promise<void> {
    await namespaceWrapper.validateAndVoteOnNodes(
      this.validateNode,
      roundNumber,
    );
  }
}
const audit = new Audit();
export { audit };
