import type { DistributionList, Submitter } from "../../types/global.js";
declare class Distribution {
    /**
     * Generates and submits the distribution list for a given round
     *
     */
    selectAndGenerateDistributionList(round: number, isPreviousRoundFailed?: boolean): Promise<void>;
    submitDistributionList: (round: number) => Promise<void>;
    /**
     * Audits the distribution list for a given round
     *
     */
    auditDistribution(round: number): Promise<void>;
    /**
     * User-end Distribution List Check Ensure that the distribution list will be correct format
     */
    userEndDistributionListCheck(candidates: Submitter[], bountyAmountPerRound: number, user_submitted_distributionList: DistributionList): Promise<DistributionList>;
    /**
     * Generates the distribution list for a given round in your logic
     */
    generateDistributionList(round: number): Promise<DistributionList>;
    /**
     * Validates the distribution list for a given round in your logic
     */
    validateDistribution: (distributionListSubmitter: string, round: number, _nodePublicKey: string) => Promise<boolean>;
    /**
     * Compares two distribution lists for equality
     */
    shallowEqual(fetchedDistributionList: DistributionList, generatedDistributionList: DistributionList): Promise<boolean>;
}
declare const distribution: Distribution;
export { distribution };
