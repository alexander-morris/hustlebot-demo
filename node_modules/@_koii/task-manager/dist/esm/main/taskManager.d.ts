import type { ExtensionConfig, UserFunctions } from "../types/taskManager.js";
declare class TaskManager {
    #private;
    customSetup: UserFunctions["setup"];
    executeTask: UserFunctions["task"];
    fetchSubmission: UserFunctions["submission"];
    auditSubmission: UserFunctions["audit"];
    makeDistributionList: UserFunctions["distribution"];
    setupRoutes: UserFunctions["routes"];
    isInitialized: boolean;
    constructor(customSetup?: UserFunctions["setup"], executeTask?: UserFunctions["task"], fetchSubmission?: UserFunctions["submission"], auditSubmission?: UserFunctions["audit"], makeDistributionList?: UserFunctions["distribution"], setupRoutes?: UserFunctions["routes"], isInitialized?: boolean);
    initialize(userFunctions: UserFunctions): void;
    checkFunctions(userFunctions: UserFunctions): [string[], string[]];
    registerExtension(extension: string, config: ExtensionConfig): void;
    getExtensions(): string[];
    hasExtension(extension: string): boolean;
    getExtensionConfig(extension: string): ExtensionConfig;
}
export declare function initializeTaskManager(userFunctions: UserFunctions): void;
export declare function getTaskManager(): Promise<TaskManager>;
export {};
